<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.0.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.0.xsd">
                           <!-- 
                           xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
                           http://www.springframework.org/schema/security/oauth2 
                           http://www.springframework.org/schema/security/spring-security-oauth2.xsd  -->
    
  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider user-service-ref="ocUserDetailsService">
        <security:password-encoder ref="openClinicaPasswordEncoder" />
        <!-- <security:password-encoder hash="md5" /> -->
        <!-- <security:user-service properties="/WEB-INF/users.properties" /> -->
    </security:authentication-provider>
  </security:authentication-manager>    

    <bean id="shaPasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
    <bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

    <bean id="openClinicaPasswordEncoder" class="org.akaza.openclinica.core.OpenClinicaPasswordEncoder">
        <property name="currentPasswordEncoder" ref="shaPasswordEncoder"/>
        <property name="oldPasswordEncoder" ref="md5PasswordEncoder"/>
    </bean>

    <bean id="securityManager" class="org.akaza.openclinica.core.SecurityManager">
        <property name="encoder" ref="openClinicaPasswordEncoder" />
    </bean>

    <!-- 
    <bean id="myFilter" class="org.akaza.openclinica.web.filter.OpenClinicaAuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureUrl" value="/pages/login/login?action=errorLogin"/>
        <property name="defaultTargetUrl" value="/MainMenu"/>
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="configurationDao" ref="configurationDao"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.LockedException">/pages/login/login?action=errorLocked</prop>
            </props>
        </property>
        <security:custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>
    </bean>
    -->
	
    <bean id="ocUserDetailsService" class="org.akaza.openclinica.web.filter.OpenClinicaJdbcService"
        p:dataSource-ref="dataSource"
        p:usersByUsernameQuery="SELECT user_name,passwd,enabled,account_non_locked FROM user_account WHERE user_name = ?" />
	
    <!--<security:global-method-security secured-annotations="enabled">
        <security:protect-pointcut
            expression="execution(* com.springsource..*Service.*(..))"
            access="ROLE_USER" />
    </security:global-method-security>
    -->
    
    
    <!-- 
    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.InMemoryOAuth2ProviderTokenServices">
        <property name="supportRefreshToken" value="true"/>
    </bean>

    <oauth:provider client-details-service-ref="clientDetails" token-services-ref="tokenServices" >
        <oauth:verification-code user-approval-page="/oauth/confirm_access"/>
    </oauth:provider>

    <oauth:client-details-service id="clientDetails">
        <oauth:client clientId="my-trusted-client" authorizedGrantTypes="password,authorization_code,refresh_token"/>
        <oauth:client clientId="my-less-trusted-client" authorizedGrantTypes="authorization_code"/>
        <oauth:client clientId="tonr" authorizedGrantTypes="authorization_code"/>
    </oauth:client-details-service>
     -->
    
</beans>